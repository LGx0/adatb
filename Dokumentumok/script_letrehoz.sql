CREATE SEQUENCE termek_kod_xbox_seq 
MAXVALUE 69999
START WITH 50000
INCREMENT BY 1;

CREATE SEQUENCE  TERMEK_KOD_PC_SEQ  
MAXVALUE 29999 
INCREMENT BY 1 
START WITH 10000;
   
CREATE SEQUENCE  
TERMEK_KOD_PS2_SEQ
MAXVALUE 49999 
INCREMENT BY 1 
START WITH 30000;
   
CREATE SEQUENCE  TERMEK_KOD_PS4_SEQ
MAXVALUE 89999 
INCREMENT BY 1 
START WITH 70000;

CREATE SEQUENCE  TERMEK_KOD_UJ_KATEGORIA
MAXVALUE 150000
INCREMENT BY 1 
START WITH 100000;

CREATE OR REPLACE TRIGGER termek_kod_uj_kat_increment
BEFORE INSERT ON TERMEKEK
FOR EACH ROW
BEGIN
:NEW.KOD := termek_kod_uj_kategoria.NEXTVAL;
END;
   
CREATE OR REPLACE TRIGGER termek_kod_xbox_auto_increment
BEFORE INSERT ON TERMEKEK
FOR EACH ROW
WHEN (NEW.KATEGORIA = 'Xbox játék')
BEGIN
:NEW.KOD := termek_kod_xbox_seq.NEXTVAL;
END;

create or replace TRIGGER termek_kod_pc_auto_increment
BEFORE INSERT ON TERMEKEK
FOR EACH ROW
WHEN (NEW.KATEGORIA = 'PC játék')
BEGIN
:NEW.KOD := termek_kod_pc_seq.NEXTVAL;
END;

create or replace TRIGGER termek_kod_ps4_auto_increment
BEFORE INSERT ON TERMEKEK
FOR EACH ROW
WHEN (NEW.KATEGORIA = 'PS 4 játék')
BEGIN
:NEW.KOD := termek_kod_ps4_seq.NEXTVAL;
END;

create or replace TRIGGER termek_kod_ps2_auto_increment
BEFORE INSERT ON TERMEKEK
FOR EACH ROW
WHEN (NEW.KATEGORIA = 'PS 2 játék')
BEGIN
:NEW.KOD := termek_kod_ps2_seq.NEXTVAL;
END;

--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('The Sims 3','PC játék',5500,9000,20,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('CALL OF DUTY','PC játék',9000,11000,20,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('The Sims 3','Xbox játék',5500,9000,11,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('CALL OF DUTY','Xbox játék',4500,7500,12,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('The Sims 3','PS 2 játék',2500,5000,15,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('CALL OF DUTY','PS 2 játék',2500,4500,40,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('The Sims 3','PS 4 játék',15500,19000,20,SYSDATE);
--INSERT INTO TERMEKEK(NEV,KATEGORIA,BESZ_AR,ELAD_AR,ELADOTT_MENNYISEG,FELVETEL_DATUMA) VALUES ('CALL OF DUTY','PS 4 játék',15500,17000,30,SYSDATE);

CREATE SEQUENCE  SZAMLA_SORSZAM_SEQ
INCREMENT BY 1 
START WITH 6
NOMAXVALUE;
   
CREATE OR REPLACE TRIGGER SZAMLA_SORSZAM_auto_increment
BEFORE INSERT ON SZAMLAK
FOR EACH ROW
BEGIN
:NEW.SORSZAM := SZAMLA_SORSZAM_SEQ.NEXTVAL;
END;
create or replace TRIGGER SZAMLA_AFA_kalkulator
BEFORE INSERT ON SZAMLAK
FOR EACH ROW
BEGIN
:NEW.AFA := :NEW.OSSZEG - (:NEW.OSSZEG / 1.27);
END;

--INSERT INTO SZAMLAK(OSSZEG,KELTE,VASARLAS_ID,VASARLO_EMAIL) VALUES (15000,SYSDATE,6,'gergo.gulyas@gmail.com');
--INSERT INTO SZAMLAK(OSSZEG,KELTE,VASARLAS_ID,VASARLO_EMAIL) VALUES (25000,SYSDATE,7,'lara@gmail.com');


CREATE SEQUENCE  VASARLAS_ID_SEQ
INCREMENT BY 1 
START WITH 11
NOMAXVALUE;
   
CREATE OR REPLACE TRIGGER VASARLAS_ID_auto_increment
BEFORE INSERT ON VASARLASOK
FOR EACH ROW
BEGIN
:NEW.ID := VASARLAS_ID_SEQ.NEXTVAL;
END;

--INSERT INTO VASARLASOK(VASARLO_EMAIL,FELVETEL) VALUES ('gergo.gulyas@gmail.com',SYSDATE);
--INSERT INTO VASARLASOK(VASARLO_EMAIL,FELVETEL) VALUES ('gergo.gulyas@gmail.com',SYSDATE);


CREATE SEQUENCE  SZALLITAS_ID_SEQ
INCREMENT BY 1 
START WITH 6
NOMAXVALUE;
   
CREATE OR REPLACE TRIGGER SZALLITAS_ID_auto_increment
BEFORE INSERT ON SZALLITASOK
FOR EACH ROW
BEGIN
:NEW.ID := SZALLITAS_ID_SEQ.NEXTVAL;
END;

--INSERT INTO SZALLITASOK(ESEDEKESSEG,ELKULDVE,VASARLAS_ID) VALUES (SYSDATE + 7,0,6);
--INSERT INTO SZALLITASOK(ESEDEKESSEG,ELKULDVE,VASARLAS_ID) VALUES (SYSDATE + 7,0,7);

create or replace TRIGGER szamlazo
AFTER UPDATE ON SZALLITASOK
FOR EACH ROW
WHEN(NEW.ELKULDVE = 1 AND OLD.ELKULDVE = 0)
DECLARE
  summa SZAMLAK.OSSZEG%TYPE;
  mailcim SZAMLAK.VASARLO_EMAIL%TYPE;
  
BEGIN
  
  SELECT SUM(AR*MENNYISEG) INTO summa 
  FROM VASAROL WHERE VASARLAS_ID = :NEW.VASARLAS_ID;
  
  SELECT VASARLO_EMAIL INTO mailcim 
  FROM VASARLASOK 
  WHERE VASARLASOK.ID = :NEW.VASARLAS_ID;
  
  INSERT INTO SZAMLAK(OSSZEG,KELTE,VASARLAS_ID,VASARLO_EMAIL) 
  VALUES(summa,SYSDATE,:NEW.VASARLAS_ID, mailcim);
  
END;

create or replace TRIGGER VASARLAS_ID_ATVESZ
BEFORE INSERT ON VASAROL
FOR EACH ROW
BEGIN
:NEW.VASARLAS_ID := VASARLAS_ID_SEQ.CURRVAL;
END;


create or replace TRIGGER SZALLITAS_VASARLAS_ID_ATVESZ
BEFORE INSERT ON SZALLITASOK
FOR EACH ROW
BEGIN
:NEW.VASARLAS_ID := VASARLAS_ID_SEQ.CURRVAL;
END;

create or replace TRIGGER VASARLAS_ID_ATVESZ
BEFORE INSERT ON VASAROL
FOR EACH ROW
BEGIN
:NEW.VASARLAS_ID := VASARLAS_ID_SEQ.CURRVAL;
END;


/****************View-ok*****************/


 CREATE OR REPLACE FORCE VIEW SZALLITASOKVIEW  AS 
  select szallitasok.id, SZALLITASOK.ESEDEKESSEG, SZALLITASOK.ELKULDVE, SZALLITASOK.VASARLAS_ID,
vasarlok.nev, vasarlok.IRANYITOSZAM, iranyitoszam.varos, vasarlok.UTCA, vasarlok.HAZSZAM  
from SZALLITASOK
inner join vasarlasok
on vasarlasok.ID = SZALLITASOK.VASARLAS_ID
inner join  vasarlok
on vasarlasok.vasarlo_email =vasarlok.email
inner join iranyitoszam
on VASARLOK.IRANYITOSZAM=IRANYITOSZAM.IRANYITOSZAM
order by SZALLITASOK.ESEDEKESSEG DESC, iranyitoszam.VAROS;



  CREATE OR REPLACE FORCE VIEW SZAMLAKVIEW AS 
  select SZAMLAK.OSSZEG, SZAMLAK.SORSZAM, SZAMLAK.KELTE, SZAMLAK.VASARLAS_ID, SZAMLAK.AFA,
vasarlok.nev, vasarlok.IRANYITOSZAM, iranyitoszam.varos, vasarlok.UTCA, vasarlok.HAZSZAM  
from SZAMLAK
inner join  vasarlok
on SZAMLAK.vasarlo_email =vasarlok.email
inner join iranyitoszam
on VASARLOK.IRANYITOSZAM=IRANYITOSZAM.IRANYITOSZAM
order by SZAMLAK.SORSZAM DESC;

/****************Összetett lekérdezések*****************/

/*legnépszerűbb termékek megkeresése*/

SELECT NEV, KATEGORIA, ELAD_AR,KOD FROM
(SELECT NEV, KATEGORIA,ELAD_AR,KOD  FROM TERMEKEK ORDER BY ELADOTT_MENNYISEG DESC)
WHERE ROWNUM <=15
ORDER BY KATEGORIA DESC;

/*legújabb termékek kilistázáshoz*/

SELECT DISTINCT KATEGORIA FROM TERMEKEK;

SELECT NEV, ELAD_AR, KOD FROM 
			(SELECT *  FROM TERMEKEK WHERE KATEGORIA = '$kategoria' ORDER BY FELVETEL_DATUMA DESC )
			WHERE ROWNUM <=5;
			
/*Vásárolt termékek meghatározása egy adott felhasználóra*/

SELECT TERMEKEK.NEV,  TERMEKEK.KATEGORIA, VASAROL.MENNYISEG,VASAROL.AR,  (VASAROL.AR*VASAROL.MENNYISEG) AS OSSZEG, VASARLASOK.FELVETEL, TERMEKEK.KOD
FROM TERMEKEK
INNER 
JOIN VASAROL 
ON TERMEKEK.KOD = VASAROL.TERMEK_KOD
INNER 
JOIN VASARLASOK 
ON VASARLASOK.ID = VASAROL.VASARLAS_ID
WHERE VASARLASOK.VASARLO_EMAIL = '$email';


/*Olyan termékek kilistázása, amiket azok vettek, akik az adott terméket is megvették, a termékkód alapján */

SELECT DISTINCT TERMEKEK.NEV, TERMEKEK.KOD
			FROM TERMEKEK
			INNER 
			JOIN VASAROL 
			ON TERMEKEK.KOD = VASAROL.TERMEK_KOD
			INNER 
			JOIN VASARLASOK 
			ON VASARLASOK.ID = VASAROL.VASARLAS_ID
			WHERE VASARLASOK.VASARLO_EMAIL IN 
			(
			SELECT VASARLASOK.VASARLO_EMAIL FROM VASAROL
			INNER 
			JOIN VASARLASOK 
			ON VASAROL.VASARLAS_ID = VASARLASOK.ID 
			WHERE VASAROL.TERMEK_KOD = $termekkod )
			AND TERMEKEK.KOD != $termekkod;


